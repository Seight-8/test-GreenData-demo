{"version":3,"sources":["actions/index.js","components/list.js","components/head.js","components/content.js","App.js","redusers/data.js","redusers/data-active.js","redusers/index.js","redusers/focus.js","index.js"],"names":["select","worker","document","querySelectorAll","setAttribute","type","payload","focus","thisFocus","AddData","id","name","middle_name","surname","position","bdate","gender","fired","updateDate","deletDate","List","props","state","edit","value","checked","alert","handleChange","bind","this","setState","getElementById","style","pointerEvents","bday","nameInpute","middleNameInpute","surnameInpute","d","Date","getDate","getMonth","getFullYear","arr","querySelector","event","target","className","placeholder","ref","inpute","onChange","defaultChecked","handleCheck","onClick","save","close","card","Component","connect","data","Data","actFocus","dispatch","bindActionCreators","Head","Content","active","slice","toggle","dis","removeAttribute","male","female","none","dd","mm","key","defaultValue","Cont","delete","disabled","map","index","status","background","Active","App","initialState","allReducers","combineReducers","action","findIndex","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"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","file":"static/js/main.f727fa64.chunk.js","sourcesContent":["export const select = (worker) => {\r\n    document.querySelectorAll('.add')[0].setAttribute('disabled', 'disabled');\r\n    return {\r\n        type: \"SELECTOR\",\r\n        payload: worker\r\n    }\r\n};\r\nexport const focus = (thisFocus) => {\r\n    const add_focuse = {\r\n        thisFocus\r\n    }\r\n    return {\r\n        type: \"ADD_FOCUS\",\r\n        payload: add_focuse\r\n    }\r\n};\r\nexport const AddData = (id, name, middle_name, surname, position, bdate, gender, fired) => {\r\n    const worker = {\r\n        id,\r\n        name,\r\n        middle_name,\r\n        surname,\r\n        position,\r\n        bdate,\r\n        gender,\r\n        fired\r\n      };\r\n    return {\r\n        type: \"ADD_DATA\",\r\n        payload: worker\r\n    }\r\n};\r\nexport const updateDate = (id, name, middle_name, surname, position, bdate, gender, fired) => {\r\n    const worker = {\r\n        id,\r\n        name,\r\n        middle_name,\r\n        surname,\r\n        position,\r\n        bdate,\r\n        gender,\r\n        fired\r\n      };\r\n    return {\r\n        type: \"UPDATE\",\r\n        payload: worker\r\n    }\r\n};\r\nexport const deletDate = (id) => {\r\n    return {\r\n        type: \"DELETE\",\r\n        payload: id\r\n    }\r\n};","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport { AddData, focus, select } from '../actions/index';\r\n\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          edit: false,\r\n          value: '',\r\n          checked: false,\r\n          alert: '',\r\n          id: 0,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n      };\r\n    edit () {\r\n        this.setState ({ edit: true });\r\n        if(document.getElementById('list') != null){\r\n        let card = document.getElementById('list');\r\n        card.style.pointerEvents = 'none';\r\n        }\r\n    };\r\n    close () {\r\n        this.setState ({ edit: false });\r\n        this.setState ({ alert: '' });\r\n        this.setState ( {value: '' });\r\n        this.setState ({ checked: false });\r\n        let card = document.getElementById('list');\r\n        card.style.pointerEvents = 'auto';\r\n    };\r\n    save  ()  {\r\n        let bday, id;\r\n        if (this.nameInpute.value === \"\" || this.middleNameInpute.value === \"\" || this.surnameInpute.value === \"\" || this.state.value === \"\") {\r\n            this.setState ({alert: 'Заполните помеченные поля \"*\" !'});\r\n        } else {\r\n        if ( document.getElementById(\"bday\").value === \"\" ){\r\n            bday = \"\";\r\n        } else {\r\n        let dd, mm, d = new Date(document.getElementById(\"bday\").value);\r\n\r\n        if (d.getDate()< 10){\r\n            dd = \"0\" + d.getDate();\r\n        } else {\r\n            dd = d.getDate();\r\n        }\r\n        if (d.getMonth()< 10){\r\n            mm = \"0\" + d.getMonth();\r\n        } else {\r\n            mm = d.getMonth();\r\n        }\r\n        bday = dd + \".\" + mm + \".\" + d.getFullYear();\r\n        }\r\n        const arr = {\r\n            id: this.state.id,\r\n            name: this.nameInpute.value,\r\n            middle_name : this.middleNameInpute.value,\r\n            surname: this.surnameInpute.value,\r\n            position: this.state.value,\r\n            bdate: bday,\r\n            gender: document.querySelector('input[name=gender]:checked').value,\r\n            fired: this.state.checked\r\n        }\r\n        this.setState ({edit: false});\r\n        this.setState ({value: ''});\r\n        this.setState ({alert: ''});\r\n        this.setState ({ checked: false });\r\n        this.props.AddData(this.state.id, this.nameInpute.value, this.middleNameInpute.value, this.surnameInpute.value, this.state.value, bday, document.querySelector('input[name=gender]:checked').value, this.state.checked);\r\n        this.props.focus(true);\r\n        this.props.select(arr);\r\n        id = this.state.id + 1;\r\n        this.setState({ id: id });\r\n        let card = document.getElementById('list');\r\n        card.style.pointerEvents = 'auto';\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n\r\n    handleCheck  () {\r\n\t\tthis.setState({checked: !this.state.checked});\r\n\t};\r\n\r\n    card () {\r\n        if (this.state.edit){\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"cardTop\">\r\n                        <div className=\"headText\">\r\n                            Чтобы добавить работника в список, заполните форму:\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"alert\">\r\n                            {this.state.alert}\r\n                        </div>\r\n                        <div>\r\n                            Поля помеченные <strong>\"*\"</strong>, обязательны для заполнения.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"cardCont\">\r\n                        <div className=\"cardElem\">\r\n                            <div>\r\n                                <input type=\"text\" className=\"focus\" placeholder=\"Фамилия\" ref={(inpute) => { this.surnameInpute = inpute }} /> <strong>*</strong>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" className=\"focus\" placeholder=\"Имя\" ref={(inpute) => { this.nameInpute = inpute }} /> <strong>*</strong>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" className=\"focus\"  placeholder=\"Отчество\" ref={(inpute) => { this.middleNameInpute = inpute }} /> <strong>*</strong>\r\n                            </div>\r\n                            <div>\r\n                                <span>Выберите должность: </span>\r\n                                <select value={this.state.value} onChange={this.handleChange}>\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"электрик\">электрик</option>\r\n                                    <option value=\"слесарь\">слесарь</option>\r\n                                    <option value=\"сварщик\">сварщик</option>\r\n                                    <option value=\"стропольщик\">стропольщик</option>\r\n                                    <option value=\"маляр\">маляр</option>\r\n                                </select> <strong>*</strong>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"cardElem\">\r\n                            <div>\r\n                                Дата рождения: <input className=\"focus\" type=\"date\" id=\"bday\" name=\"bday\" />\r\n                            </div>\r\n                            <div>\r\n                                <span>Выберите пол:</span>\r\n                                <div>\r\n                                    Мужской: <input type='radio' id='male' name='gender' value='муж.' />\r\n                                </div>\r\n                                <div>\r\n                                    Женский: <input type='radio' id='female' name='gender' value='жен.' />\r\n                                </div>\r\n                                <input type='radio' className='radioNone' id='none' value='' name='gender'  defaultChecked />\r\n                            </div>\r\n                            <div className=\"fired\">\r\n                                Уволен: <input type=\"checkbox\" onChange={this.handleCheck.bind(this)} defaultChecked={this.state.checked} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"save\" onClick={this.save.bind(this)}>Добавить</button>\r\n                    <button className=\"close\" onClick={this.close.bind(this)}>Отмена</button>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.card()}\r\n                <button className=\"add\" onClick={this.edit.bind(this)}>Добавить нового сотрудника</button>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        data: state.Data,\r\n        focus: state.actFocus\r\n\r\n    };\r\n}\r\n\r\nfunction matchDispatchToProps (dispatch) {\r\n    return bindActionCreators({\r\n        AddData: AddData,\r\n        focus: focus,\r\n        select: select\r\n    },\r\n    dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(List);","import React from \"react\";\r\n\r\nconst Head = () => {\r\n    return (\r\n        <div className=\"list\">\r\n            <div className=\"head\">\r\n                <div className=\"w_name\">Ф.И.О.</div>\r\n                <div className=\"w_position\">Должность</div>\r\n                <div className=\"w_date\">Дата рождения</div>\r\n                <div className=\"w_gender\">Пол</div>\r\n                <div className=\"w_status\">Статус</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Head;","import React, {Component} from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {select, deletDate, updateDate, focus, AddData} from '../actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          edit: false,\r\n          alert: '',\r\n          value: '',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    };\r\n\r\n    edit () {\r\n        this.setState ({ edit: true });\r\n        this.props.focus(false);\r\n        this.setState ({ checked: this.props.active.fired });\r\n\r\n    }\r\n\r\n    save () {\r\n        let bday, checked;\r\n        if (this.nameInpute.value === \"\" || this.middleNameInpute.value === \"\" || this.surnameInpute.value === \"\") {\r\n            this.setState ({alert: 'Заполните помеченные поля *'});\r\n            this.setState({value: this.props.active.position});\r\n        } else {\r\n            if ( document.getElementById(\"bday\").value === \"\" ){\r\n                bday = \"\";\r\n            } else {\r\n                let dd, mm, yy, d = document.getElementById(\"bday\").value;\r\n                dd = d.slice(8 , 10);\r\n                mm = d.slice(5 , 7);\r\n                yy = d.slice(0 , 4);\r\n                bday = dd + '.' + mm + '.' + yy;\r\n            }\r\n\r\n            if(this.props.actFocus.thisFocus === true) {\r\n                checked = this.props.active.fired;\r\n            } else {\r\n                checked = this.state.checked;\r\n            }\r\n            this.props.updateDate(this.props.active.id, this.nameInpute.value, this.middleNameInpute.value, this.surnameInpute.value, this.toggle(), bday, document.querySelector('input[name=gender]:checked').value, checked);\r\n            this.setState({ dis: 'disabled' });\r\n            document.querySelectorAll('.add')[0].removeAttribute('disabled');\r\n            this.nameInpute.value = \"\";\r\n            this.middleNameInpute.value = \"\";\r\n            this.surnameInpute.value = \"\";\r\n            this.setState ({value: \"\"});\r\n            bday = \"\";\r\n            document.querySelector('input[name=gender]:checked').value = \"\";\r\n            this.setState ({alert: ''});\r\n            this.setState ({ edit: false });\r\n            this.props.focus(false);\r\n            this.setState ({ checked: '' });\r\n\r\n            }\r\n    }\r\n\r\n    close () {\r\n        document.querySelectorAll('.add')[0].removeAttribute('disabled');\r\n        this.setState ({ edit: false });\r\n        this.props.focus(false);\r\n        this.setState ({ checked: '' });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    handleCheck  () {\r\n        this.setState ({ checked: !this.props.active.fired });\r\n    }\r\n\r\n    Cont () {\r\n        let male, female, none;\r\n\r\n        if (this.state.edit === true || this.props.actFocus.thisFocus === true){\r\n            if (this.props.active.gender === \"муж.\") {\r\n                male = true;\r\n                female = false;\r\n                none = false;\r\n            } else {\r\n                if (this.props.active.gender === \"жен.\"){\r\n                    male = false;\r\n                    female = true;\r\n                    none = false;\r\n                } else {\r\n                    male = false;\r\n                    female = false;\r\n                    none = true;\r\n                }\r\n            }\r\n\r\n            let dd, mm, yy, bdate, d = this.props.active.bdate;\r\n            dd = d.slice(0 , 2);\r\n            mm = d.slice(3 , 5);\r\n            yy = d.slice(6 , 10);\r\n            bdate = yy + '-' + mm + '-' + dd;\r\n            return(\r\n                <div className=\"card\" key={this.props.active.id}>\r\n                    <div className=\"headText\">\r\n                        Изменение данных работника:\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"alert\">\r\n                        {this.state.alert}\r\n                    </div>\r\n                    <div>\r\n                        Поля помеченные <strong>\"*\"</strong>, обязательны для заполнения.\r\n                    </div>\r\n                    <div className=\"cardCont\">\r\n                        <div className=\"cardElem\">\r\n                            <div>\r\n                                <input type=\"text\" defaultValue={this.props.active.surname} ref={(inpute) => { this.surnameInpute = inpute }} /> <strong>*</strong>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" defaultValue={this.props.active.name} ref={(inpute) => { this.nameInpute = inpute }} /> <strong>*</strong>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\" defaultValue={this.props.active.middle_name} ref={(inpute) => { this.middleNameInpute = inpute }} /> <strong>*</strong>\r\n                            </div>\r\n                            <div>\r\n                                <span>Выберите должность: </span>\r\n                                <select defaultValue={this.props.active.position} className=\"toggle\" onChange={this.handleChange}>\r\n                                    <option value=\"электрик\">электрик</option>\r\n                                    <option value=\"слесарь\">слесарь</option>\r\n                                    <option value=\"сварщик\">сварщик</option>\r\n                                    <option value=\"стропольщик\">стропольщик</option>\r\n                                    <option value=\"маляр\">маляр</option>\r\n                                </select> <strong>*</strong>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"cardElem\">\r\n                            <div>\r\n                                Дата рождения: <input type=\"date\" id=\"bday\" name=\"bday\" defaultValue={bdate} />\r\n                            </div>\r\n                            <div>\r\n                                <span>Выберите пол:</span>\r\n                                <div>\r\n                                    Мужской: <input type='radio' id='male' name='gender' value='муж.' defaultChecked={male} />\r\n                                </div>\r\n                                <div>\r\n                                    Женский<input type='radio' id='female' name='gender' value='жен.' defaultChecked={female} />\r\n                                </div>\r\n                                <input type='radio' className='radioNone' id='none' value='' name='gender'  defaultChecked={none} />\r\n                            </div>\r\n                            <div className=\"fired\">\r\n                                Уволен: <input type=\"checkbox\" onChange={this.handleCheck.bind(this)} defaultChecked={this.props.active.fired} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"save\" onClick={this.save.bind(this)}>Сохранить</button>\r\n                    <button className=\"close\" onClick={this.close.bind(this)}>Назад</button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    delete () {\r\n        this.props.deletDate(this.props.active);\r\n        this.setState({ edit: false });\r\n        this.props.focus(false);\r\n    }\r\n\r\n    toggle () {\r\n        if (this.state.value === ''){\r\n            return this.props.active.position;\r\n        }else {\r\n            return this.state.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let dis;\r\n        if (this.state.edit === true || this.props.actFocus.thisFocus === true) {\r\n            dis = '';\r\n        } else {\r\n            dis = 'disabled';\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {this.Cont()}\r\n                <button className=\"del\" onClick={this.delete.bind(this)} disabled={dis}>Удалить выбранного сотрудника</button>\r\n                <div className=\"list l2\" id=\"list\">\r\n                    {this.props.data.map((data, index) => {\r\n\r\n                        let status;\r\n                        if (data.fired === true){\r\n                            status = \"уволен\"\r\n                        } else {\r\n                            status = \"\"\r\n                        }\r\n                        let background;\r\n\r\n                        if ((this.state.edit === true && data.id === this.props.active.id) || (this.props.actFocus.thisFocus === true && data.id === this.props.active.id)){\r\n\r\n                            background = 'active';\r\n                        }\r\n                        return(\r\n                            <div key={index} onClick={() => this.props.select (data)} className={background}>\r\n                                <div className=\"data\" onClick={this.edit.bind(this)} >\r\n                                    <div className=\"w_name\">{data.surname} {data.name} {data.middle_name}</div>\r\n                                    <div className=\"w_position\">{data.position}</div>\r\n                                    <div className=\"w_date\">{data.bdate}</div>\r\n                                    <div className=\"w_gender\">{data.gender}</div>\r\n                                    <div className=\"w_status\">{status}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        data: state.Data,\r\n        actFocus: state.actFocus,\r\n\r\n        active: state.Active\r\n\r\n    };\r\n}\r\n\r\nfunction matchDispatchToProps (dispatch) {\r\n    return bindActionCreators({select: select, deletDate:deletDate, updateDate: updateDate, focus: focus, AddData: AddData}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Content);","import React from 'react';\nimport './App.css';\nimport List from './components/list';\nimport Head from './components/head';\nimport Content from './components/content';\n\nfunction App() {\n  return (\n    <div>\n      <Head />\n\n      <List />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = [];\r\n\r\nexport default function data(state = initialState, action) {\r\n    switch (action.type){\r\n        case 'ADD_DATA':\r\n            return [\r\n                ...state,\r\n                action.payload\r\n            ];\r\n        case 'DELETE':\r\n                document.querySelectorAll('.add')[0].removeAttribute('disabled');\r\n                const index = state.findIndex(({id}) => id === action.payload.id)\r\n            return[\r\n                ...state.slice(0, index),\r\n                ...state.slice(index + 1)\r\n            ]\r\n        case 'UPDATE':\r\n        {\r\n            const index = state.findIndex(({id}) => id === action.payload.id)\r\n            return[\r\n                ...state.slice(0, index),\r\n                action.payload,\r\n                ...state.slice(index + 1)\r\n            ]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function (state=null, action) {\r\n    switch (action.type) {\r\n        case \"SELECTOR\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport data from './data';\r\nimport active from './data-active';\r\nimport focus from './focus';\r\n\r\n\r\n\r\nconst allReducers = combineReducers({\r\n    Data: data,\r\n    Active: active,\r\n    actFocus: focus\r\n})\r\n\r\nexport default allReducers","export default function (state = false, action) {\r\n    switch (action.type) {\r\n        case \"ADD_FOCUS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport allReducers from './redusers/index';\n\nconst store = createStore(allReducers,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n\n"],"sourceRoot":""}